@inject HttpClient _httpClient
@inject NavigationManager uriHelper
@inject IJSRuntime js

<h3>LogIn</h3>
<EditForm Model="@logIn" OnValidSubmit="@CreatePass">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Name:</label>
        <div>
            <InputText @bind-Value="@logIn.Name" />
            <ValidationMessage For="@(() => logIn.Name)" />
        </div>
        <label>Password:</label>
        <div>
            <InputText @bind-Value="@logIn.Pass" />
            <ValidationMessage For="@(() => logIn.Pass)" />
        </div>
    </div>
    <button type="submit" class="btn btn-success">
        LogIn
    </button>
</EditForm>

@code {
    LogIn logIn { get; set; } = new LogIn();

    async Task CreatePass()
    {
        var response = await _httpClient.PostAsJsonAsync("https://localhost:44307/login", logIn);

        await js.InvokeVoidAsync("localStorage.setItem", "TravelCompanyToken", await response.Content.ReadAsStringAsync());

        uriHelper.NavigateTo("/", forceLoad: true);
    }
}
